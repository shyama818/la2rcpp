// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _la2rcpp_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _la2rcpp_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _la2rcpp_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _la2rcpp_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// feature
arma::mat feature(arma::mat& tdata, arma::mat& ran0, const int brocksize);
RcppExport SEXP _la2rcpp_feature(SEXP tdataSEXP, SEXP ran0SEXP, SEXP brocksizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type tdata(tdataSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type ran0(ran0SEXP);
    Rcpp::traits::input_parameter< const int >::type brocksize(brocksizeSEXP);
    rcpp_result_gen = Rcpp::wrap(feature(tdata, ran0, brocksize));
    return rcpp_result_gen;
END_RCPP
}
// featurem
arma::mat featurem(arma::mat& tdata, arma::rowvec theta, arma::mat& ran0, const int brocksize, const int odimno, arma::rowvec& start);
RcppExport SEXP _la2rcpp_featurem(SEXP tdataSEXP, SEXP thetaSEXP, SEXP ran0SEXP, SEXP brocksizeSEXP, SEXP odimnoSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type tdata(tdataSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type ran0(ran0SEXP);
    Rcpp::traits::input_parameter< const int >::type brocksize(brocksizeSEXP);
    Rcpp::traits::input_parameter< const int >::type odimno(odimnoSEXP);
    Rcpp::traits::input_parameter< arma::rowvec& >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(featurem(tdata, theta, ran0, brocksize, odimno, start));
    return rcpp_result_gen;
END_RCPP
}
// feature2
arma::mat feature2(arma::mat& tdata, arma::mat& ran0, const int brocksize, arma::rowvec& start, const int ri);
RcppExport SEXP _la2rcpp_feature2(SEXP tdataSEXP, SEXP ran0SEXP, SEXP brocksizeSEXP, SEXP startSEXP, SEXP riSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type tdata(tdataSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type ran0(ran0SEXP);
    Rcpp::traits::input_parameter< const int >::type brocksize(brocksizeSEXP);
    Rcpp::traits::input_parameter< arma::rowvec& >::type start(startSEXP);
    Rcpp::traits::input_parameter< const int >::type ri(riSEXP);
    rcpp_result_gen = Rcpp::wrap(feature2(tdata, ran0, brocksize, start, ri));
    return rcpp_result_gen;
END_RCPP
}
// pca
arma::mat pca(const int mlimit, arma::mat& traindata0);
RcppExport SEXP _la2rcpp_pca(SEXP mlimitSEXP, SEXP traindata0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type mlimit(mlimitSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type traindata0(traindata0SEXP);
    rcpp_result_gen = Rcpp::wrap(pca(mlimit, traindata0));
    return rcpp_result_gen;
END_RCPP
}
// mtrick
double mtrick(arma::mat& traindata);
RcppExport SEXP _la2rcpp_mtrick(SEXP traindataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type traindata(traindataSEXP);
    rcpp_result_gen = Rcpp::wrap(mtrick(traindata));
    return rcpp_result_gen;
END_RCPP
}
// softmax
arma::mat softmax(arma::mat& train_batch_preds);
RcppExport SEXP _la2rcpp_softmax(SEXP train_batch_predsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type train_batch_preds(train_batch_predsSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax(train_batch_preds));
    return rcpp_result_gen;
END_RCPP
}
// update_w
arma::mat update_w(const double step_size, const double reg_param, const int batch_size, const int blocksz, arma::mat& residue, arma::mat& W_mat, arma::mat& train_batch_X);
RcppExport SEXP _la2rcpp_update_w(SEXP step_sizeSEXP, SEXP reg_paramSEXP, SEXP batch_sizeSEXP, SEXP blockszSEXP, SEXP residueSEXP, SEXP W_matSEXP, SEXP train_batch_XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< const double >::type reg_param(reg_paramSEXP);
    Rcpp::traits::input_parameter< const int >::type batch_size(batch_sizeSEXP);
    Rcpp::traits::input_parameter< const int >::type blocksz(blockszSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type residue(residueSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W_mat(W_matSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type train_batch_X(train_batch_XSEXP);
    rcpp_result_gen = Rcpp::wrap(update_w(step_size, reg_param, batch_size, blocksz, residue, W_mat, train_batch_X));
    return rcpp_result_gen;
END_RCPP
}
// mapvec
arma::rowvec mapvec(arma::rowvec x, arma::rowvec z1, arma::rowvec z2);
RcppExport SEXP _la2rcpp_mapvec(SEXP xSEXP, SEXP z1SEXP, SEXP z2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type z1(z1SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type z2(z2SEXP);
    rcpp_result_gen = Rcpp::wrap(mapvec(x, z1, z2));
    return rcpp_result_gen;
END_RCPP
}
// row_find
int row_find(arma::mat x, arma::rowvec y);
RcppExport SEXP _la2rcpp_row_find(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(row_find(x, y));
    return rcpp_result_gen;
END_RCPP
}
// uniqueVec
arma::mat uniqueVec(arma::mat& x);
RcppExport SEXP _la2rcpp_uniqueVec(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(uniqueVec(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_la2rcpp_rcpparma_hello_world", (DL_FUNC) &_la2rcpp_rcpparma_hello_world, 0},
    {"_la2rcpp_rcpparma_outerproduct", (DL_FUNC) &_la2rcpp_rcpparma_outerproduct, 1},
    {"_la2rcpp_rcpparma_innerproduct", (DL_FUNC) &_la2rcpp_rcpparma_innerproduct, 1},
    {"_la2rcpp_rcpparma_bothproducts", (DL_FUNC) &_la2rcpp_rcpparma_bothproducts, 1},
    {"_la2rcpp_feature", (DL_FUNC) &_la2rcpp_feature, 3},
    {"_la2rcpp_featurem", (DL_FUNC) &_la2rcpp_featurem, 6},
    {"_la2rcpp_feature2", (DL_FUNC) &_la2rcpp_feature2, 5},
    {"_la2rcpp_pca", (DL_FUNC) &_la2rcpp_pca, 2},
    {"_la2rcpp_mtrick", (DL_FUNC) &_la2rcpp_mtrick, 1},
    {"_la2rcpp_softmax", (DL_FUNC) &_la2rcpp_softmax, 1},
    {"_la2rcpp_update_w", (DL_FUNC) &_la2rcpp_update_w, 7},
    {"_la2rcpp_mapvec", (DL_FUNC) &_la2rcpp_mapvec, 3},
    {"_la2rcpp_row_find", (DL_FUNC) &_la2rcpp_row_find, 2},
    {"_la2rcpp_uniqueVec", (DL_FUNC) &_la2rcpp_uniqueVec, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_la2rcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
